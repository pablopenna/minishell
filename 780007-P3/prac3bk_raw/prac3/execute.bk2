#include <unistd.h>
#include <stdlib.h>
#include <sys/wait.h>

#include "parser.h"
#include "execute.h"
#include "free_args.h"
#include "jobs.h"

void execute_external_command(const char *command)
{
	char **args;
	int backgr=0;
	pid_t pid;
	int status;

	if ((args=parser_command(command,&backgr))==NULL)
	{
		return;
	}
	else
	{
		pid=fork();
		switch(pid)
		{
			case 0: printf("\n------soy hijo\n");
					args=parser_command(command,&backgr);
					execvp(args[0],args);
				
					if(backgr==1)
					{
						while(wait(&status) != pid);
					}	
					break;

					

			case -1: printf("fallo creando hijo");
					exit(-1);
					break;

			default:if(backgr==1) 
						while(wait(&status) != pid);
					if(status==0)
						printf("\n-----Ejecuci√≥n normal del hijo\t%d\n",backgr);
					else
						printf("Fallo ejecucion del hijo");
					break;
		}
	}
	parser_free_args(args);
}
